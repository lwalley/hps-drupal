// Custom sass functions
@function hpszen-px-to-em($pixels-to-convert, $base-font-size-unitless) {
  @return ($pixels-to-convert / $base-font-size-unitless) + 0em;
}

// Custom sass mixins
//
// To use a mixin in this file, add this line to the top of your .scss file:
//   @import "base";
// Then to use a mixin for a particular rule, add this inside the ruleset's
// curly brackets:
//   @include mix-in-name;


// element-invisible as defined by http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// The word "Unpublished" displayed underneath unpublished nodes and comments.
@mixin unpublished-div {
  height: 0;
  overflow: visible;
  color: #d8d8d8;
  font-size: 75px;
  line-height: 1;
  font-family: Impact, "Arial Narrow", Helvetica, sans-serif;
  font-weight: bold;
  text-transform: uppercase;
  text-align: center;
  word-wrap: break-word; // A very nice CSS3 property

  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    .lt-ie8 &>* {
      position: relative; // Otherwise these elements will appear below the "Unpublished" text.
    }
  }
}

// HPS Mixins
@mixin hpszen-box-emboss($opacity: 0.2, $opacity2: 0.05) {
  @include box-shadow(rgba(white, $opacity) 0 1px 0, rgba(black, $opacity2) 0 1px 0 inset);
}
@mixin hpszen-letterpress($opacity: 0.5) {
  @include text-shadow(rgba(white, $opacity) 0 1px 0);
}
@mixin hpszen-vertical-rule($side, $opacity: 0.2, $opacity2: 0.5) {
  @include apply-side-rhythm-border($side, 1px, 0);
  border-#{$side}-color: rgba(white, $opacity);
  @if $side == left {
    @include single-box-shadow(rgba(black, $opacity2), -1px, 0, 0);
  } @else {
    @include single-box-shadow(rgba(black, $opacity2), 1px, 0, 0);
  }
}

@mixin hpszen-button($color-button-background, $color-button-text) {
  $from: $color-button-background;
  $to: lighten($color-button-background, 5%);
  $from-saturated: saturate($from, 50%);
  $to-saturated: saturate($to, 50%);
  color: $color-button-text;
  overflow: visible;
  font-family: $font-buttons;
  text-decoration: none;
  @include rhythm-borders(1px, 0.4);
  padding-left: rhythm(0.6);
  padding-right: rhythm(0.6);
  @include border-radius;
  border-color: lighten($to, 2%) lighten($to, 5%) darken($from, 2%) darken($from, 5%);
  background-color: $from;
  @include background-image(linear-gradient(left top, $from, $to));
  cursor: pointer;
  &:hover {
    @include background-image(linear-gradient(left top, $from-saturated, $to-saturated));
  }
}

@mixin hpszen-input($width: rhythm(10), $from: #ddd, $to: #fff) {
  width: $width;
  @include rhythm-borders(1px, 0.4);
  border-color: $from - #111111;
  @include background-image(linear-gradient($from, $to));
}
@mixin hpszen-textarea($width: rhythm(10), $from: #ddd, $to:  #fff) {
  border: 1px solid darken($from, 10%);
  @include background-image(linear-gradient(left top, $from, $to));
}
@mixin hpszen-adjust-font-size-and-rhythm($adjustment) {
  /* Sets the font-size and line-height while keeping a proper vertical rhythm. */
  @include adjust-font-size-to($adjustment * $base-font-size);
  /* Sets 1 unit of vertical rhythm on the top and bottom margins. */
  @include leader(1, $adjustment * $base-font-size);
  @include trailer(1, $adjustment * $base-font-size);
}
// @see normalize.scss
// @see responsive.scss
@mixin hpszen-increase-base-font-sizes($increase) {
  html {
    font-size: 100% * ($base-font-size * $increase / 16px);
    -webkit-text-size-adjust: 100%;
    -ms-text-size-adjust: 100%;
  }
}
// Content: Set/reset base grid with adjusted gutter
@mixin hpszen-adjust-base-gutter($adjustment) {
  #content,
  .sidebars {
    @include zen-grid-item-base($zen-gutter-width * $adjustment);
    @include zen-clear();
    @include zen-grid-item(12, 1);
  }

  // When we're using panels, make #content nested and assign grids to children.
  // @note we use panels inside #content rather than sidebars, so we have
  // more support for panels layouts than sidebar regions.
  // @todo add in support for responsive sidebar regions.
  // @todo add page title prefix and suffix elements to grid?
  .hpszen-primary-box,
  .hpszen-primary-aside-boxes,
  .hpszen-primary-upside-boxes,
  .hpszen-primary-downsides-boxes {
    #content {
      @include zen-nested-container();
      @include padding-trailer(2);
      .region-highlighted,
      > h1#page-title,
      .breadcrumb,
      .messages,
      > ul.tabs,
      .region-help,
      > ul.action-links,
      > .block,
      .panel-hpszen-primary-box,
      .panel-hpszen-aside-box,
      .panel-hpszen-upside-box,
      .panel-hpszen-downside-box {
        @include zen-grid-item-base($zen-gutter-width * $adjustment);
        @include zen-clear();
        @include zen-grid-item(12, 1);
      }
      .panel-hpszen-primary-box,
      .panel-hpszen-aside-box,
      .panel-hpszen-upside-box,
      .panel-hpszen-downside-box {
        @include zen-nested-container();
        .panel-pane {
          @include zen-grid-item-base($zen-gutter-width * $adjustment);
          @include zen-clear();
          @include zen-grid-item(12, 1);
        }
      }
    }
  }
}
@mixin hpszen-bulletless-list {
  list-style-type: none;
  padding-left: 0;
}
@mixin mblhistory-blockquote {
  position: relative;
  margin-left: rhythm(1.5);
  @include leader(2);
  p {
    &:first-child {
      @include hpszen-adjust-font-size-and-rhythm(1.3);
      @include adjust-leading-to(1.2);
      &:before {
        content: '\201C';
        @include adjust-font-size-to(4 * $base-font-size);
        position: absolute;
        left: rhythm(0.30) * -1;
        top: rhythm(0.15) * -1;
      }
      &:after {
        content: '\201D';
      }
    }
    &:last-child {
      text-align: right;
    }
  }
}
// Colors
@mixin hpszen-color($color-list) {
  background-color: nth($color-list, 1);
  color: nth($color-list, 2);
  a {
    &:link {
      color: nth($color-list, 3);
    }
    &:visited {
      color: darken(nth($color-list, 3), 10%);
    }
    &:hover,
    &:focus {
      color: lighten(nth($color-list, 3), 10%);
    }
  }
  input[type="submit"] {
    @include hpszen-button(nth($color-list, 4), nth($color-list, 5));
  }
}
// Import sprites.
$icons-small-layout: smart;
$icons-small: sprite-map("../images/icons-small/*.png");
//@import "../images/icons-small/*.png";
