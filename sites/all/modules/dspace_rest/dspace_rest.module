<?php

function dspace_rest_ctools_plugin_api($owner, $api) {
  if ($owner == 'feeds' && $api == 'plugins') {
    return array('version' => 1);
  }
}

function dspace_rest_feeds_plugins() {
  $info = array();
  $info['FeedsDSpaceCommunityFetcher'] = array(
    'name' => 'DSpace Community Fetcher',
    'description' => 'Fetch new and updated items from a DSpace Community',
    'help' => 'Fetch a JSON-formatted list of new and updated DSpace items from a Community',
    'handler' => array(
      'parent' => 'FeedsFetcher',
      'class' => 'FeedsDSpaceCommunityFetcher',
      'file' => 'FeedsDSpaceCommunityFetcher.inc',
      'path' => drupal_get_path('module', 'dspace_rest') . '/plugins/feeds',
    ),
  );
  $info['FeedsDSpaceCollectionParser'] = array(
    'name' => 'DSpace Community Parser',
    'description' => 'Parse DSpace Community data',
    'help' => 'Parse Community data from DSpace REST server',
    'handler' => array(
      'parent' => 'FeedsParser',
      'class' => 'FeedsDSpaceCommunityParser',
      'file' => 'FeedsDSpaceCommunityParser.inc',
      'path' => drupal_get_path('module', 'dspace_rest') . '/plugins/feeds',
    ),
  );
  return $info;
}

/**
 * Implements hook_feeds_after_import().
 */
function dspace_rest_feeds_after_import(FeedsSource $source) {
  $fetcher = feeds_plugin('FeedsDSpaceCommunityFetcher', $source->importer->id);
  $config = $source->getConfigFor($fetcher);

  $date = new DateTime($config['last_import_date']);
  $date->add(new DateInterval('P1D'));

  // Never set an import date of later than today.
  $today = new DateTime();
  if ($today > $date) {
    $config['last_import_date'] = $date->format('Y-m-d');
    $source->setconfigFor($fetcher, $config);
    $source->save;
  }
}
