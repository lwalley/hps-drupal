<?php

function lni_menu() {

  $items['lni/items'] = array(
    'title' => 'LNI Items',
    'page callback' => 'lni_list_items',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
  $items['lni/handle/%'] = array(
    'title' => 'LNI Handle',
    'page callback' => 'lni_lookup',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  return $items;

}

function lni_list_items() {

  $items = array();

  $ch = curl_init();
  $options = array(
      CURLOPT_URL => "http://nicola%40longsight.com:mbldspace2012@stsrepository.mbl.edu/lni/dav/dso_10776%24486?type=item&type=bitstream",
      CURLOPT_HEADER => 0,
      CURLOPT_CUSTOMREQUEST => 'PROPFIND',
      CURLOPT_HTTPHEADER => array(
          "props:allprops",
          "Depth: INFINITY"
      ),
      CURLOPT_RETURNTRANSFER => TRUE
  );
  curl_setopt_array($ch, $options);
  $response = curl_exec($ch);
  curl_close($ch);

  if (!$response) {
    return 'There was an error accessing info from DSpace.';
  }

  $collection = simplexml_load_string($response);

  if (!$collection) {
    return 'There was an error accessing info from DSpace.';
  }

  foreach ($collection->response as $record) {
    
    $handle = str_replace('http://stsrepository.mbl.edu:80/lni/dav/dso_10776$486/','',$record->href);

    $types = $record->propstat[0]->prop->resourcetype->children();
    foreach ($types as $type) {
      if ($type->getName() == 'collection') {
        $title = (string) $record->propstat[0]->prop->displayname;
        $href = (string) $record->href;
        $modified = (string) $record->propstat[0]->prop->getlastmodified;
        $modified_date = strtotime($modified);

        $items[] = l($title, 'lni/handle/'.$handle);

        // since we're on a collection, let's add to our views tables
        /* $lni_item = db_query("SELECT * from lni where handle = '".$handle."'");
        if (!isset($lni_item) || !$lni_item || (mysql_num_rows($lni_item) == 0)) {
          db_query("INSERT into lni (`title`, `handle`, `last_modified`) VALUES ('".$title."','".$handle."',".$modified_date.")" );
        } */
        db_merge('lni')
          ->key(array('handle' => $handle))
          ->fields(array(
            'title' => addslashes($title),
            'last_modified' => $modified_date
          ))
          ->execute();

      } 
    }

    if (count($types) == 0) {
      // this is not a collection

      $location = explode('/',$handle);
      $parent_handle = $location[0];
      $bitstream = $location[1];

      $name = (string) $record->propstat[0]->prop->displayname;
      //error_log($name);
      if (strrpos($name, 'xhtml') !== false) {
        $xhtml_link = (string) $record->href;
        error_log($xhtml_link);
        $xhtml_link = 'http://nicola%40longsight.com:mbldspace2012@'.substr($xhtml_link, 7);
        $ch = curl_init();
        $options = array(
          CURLOPT_URL => $xhtml_link,
          CURLOPT_HEADER => 0,
          CURLOPT_RETURNTRANSFER => TRUE
        );
        curl_setopt_array($ch, $options);
        $xhtml_data = curl_exec($ch);
        curl_close($ch);

        $subject = array();
        $keywords = '';
        $subject_embryo = '';

        libxml_use_internal_errors(true);

        $xhtml = simplexml_load_string($xhtml_data);
        if ($xhtml) {
          foreach ($xhtml->head->meta as $meta) {
            $attributes = $meta->attributes();
            error_log($attributes);
            if (isset($attributes['name'])) {
              if ($attributes['name'] == 'keywords') {
                $keywords = $attributes['content'];
              } else if ($attributes['name'] == 'dc.subject') {
                $subject[] = trim($attributes['content']);
              } else if ($attributes['name'] == 'dc.subject.embryo') {
                $subject_embryo = $attributes['content'];
              }
            }
          }
        }

        db_merge('lni')
          ->key(array('handle' => $parent_handle))
          ->fields(array(
            'subject' => implode(",", $subject),
            'keywords' => trim($keywords),
            'subject_embryo' => trim($subject_embryo)
          ))->execute();

      }

    }
    
    
  }

  return theme('item_list', array('items' => $items));

}

function lni_lookup($handle) {

  if (strpos($handle, '$') !== false) {
    $handle = str_replace('$', '%24', $handle);
  }

  $output = '';

  $ch = curl_init();
  $options = array(
      CURLOPT_URL => "http://nicola%40longsight.com:mbldspace2012@stsrepository.mbl.edu/lni/dav/".$handle."?type=item&type=bitstream",
      CURLOPT_HEADER => 0,
      CURLOPT_CUSTOMREQUEST => 'PROPFIND',
      CURLOPT_HTTPHEADER => array(
          "props:allprops",
          "Depth: INFINITY"
      ),
      CURLOPT_RETURNTRANSFER => TRUE
  );
  curl_setopt_array($ch, $options);
  $response = curl_exec($ch);
  curl_close($ch);
 
  $collection = simplexml_load_string($response);

  $rows = array();
  $terms = array();

  foreach ($collection->response as $record) {

    $types = $record->propstat[0]->prop->resourcetype->children();
    foreach ($types as $type) {
      if ($type->getName() == 'collection') {
         drupal_set_title((string) $record->propstat[0]->prop->displayname);
         $output .= 'Last Modified: '.$record->propstat[0]->prop->getlastmodified;
         $dchildren = $record->propstat[0]->prop->children('dspace');
         foreach ($dchildren as $dchild) {
           $output .= $dchild;
         }
         $output .= ' | <a href="http://stsrepository.mbl.edu/handle/'.str_replace('%24', '/', substr($handle, 4)).'">'.$record->propstat[0]->prop->displayname.' on DSpace</a>';
       }
     }

     if (count($types) == 0) {
       // this is not a collection
       $name = (string) $record->propstat[0]->prop->displayname;
       if (strrpos($name, 'xhtml') === false) {
         $row = array();
         $row[] = l($name, (string) $record->href);
         $row[] = (string) $record->propstat[0]->prop->getcontenttype;
         $rows[] = $row;
       } else {
         // this is our xhtml body
         $xhtml_link = (string) $record->href;
         $xhtml_link = 'http://nicola%40longsight.com:mbldspace2012@'.substr($xhtml_link, 7);
         $ch = curl_init();
         $options = array(
           CURLOPT_URL => $xhtml_link,
           CURLOPT_HEADER => 0,
           CURLOPT_RETURNTRANSFER => TRUE
         );
         curl_setopt_array($ch, $options);
         $xhtml_data = curl_exec($ch);
         curl_close($ch);

         // parse out the parts I want
         $xhtml = simplexml_load_string($xhtml_data);

         // $output .= $xhtml_data; // this just prints out the whole xhtml page
         $output .= check_markup((string) $xhtml->body->asXML(), 'full_html') ;  //wrap in some divs?

         // try to get the dc tags
         foreach ($xhtml->head->meta as $meta) {
           $attributes = $meta->attributes();
           if (isset($attributes['name']) && $attributes['name'] != '') {
             $term = array();
             $term[] = $attributes['name'];
             $term[] = $attributes['content'];
             $terms[] = $term;
           }  
         }

       }

     }   


  }

  $output .= theme('table', array('header' => array('Name', 'Content'), 'rows' => $terms )) . theme('table', array( 'header' => array('Title', 'Type'), 'rows' => $rows ));


  return $output;
}

function lni_views_api() {
  return array(
    'api' => 3,
    //'path' => drupal_get_path('module', 'lni'),
  );
}


